function get_posts(t) {
  console.log(t);
  var a = jQuery.noConflict(),
    e = t["data-target-div"],
    n = a(e).find("#manage-ajax-response"),
    s = a(e).find(".status");
  // console.log(a(s));
  t4e_ajax.plugin_path,
    a(s).html('<i class="fa fa-spinner fa-spin"></i>').addClass("active"),
    a(n).addClass("loading");
  // return '';
  a.ajax({
    url: t4e_ajax.ajax_url,
    data: {
      action: "t4e_get_filter_posts",
      nonce: t4e_ajax.nonce,
      params: t,
    },
    type: "post",
    dataType: "json",
    success: function (t, e, r) {
      // console.log(t);

      a(n).removeClass("loading"),
        200 === t.status
          ? a(n).html(t.content)
          : 201 === t.status
          ? a(n).html('<div class="no_post"><span>Opps!!! There is no post!</span></div>')
          : 404 === t.status
          ? a(n).html(t.content)
          : a(s).html(t.message);
    },
    error: function (t, e, n) {
      a(s).html(e);
    },
    complete: function (t, e) {
      (msg = e),
        "success" === e && (msg = t.responseJSON.found),
        a(s).text("Posts found: " + msg);
    },
  });
}

jQuery(function (t) {
  function a(a, e) {
    return {
      page: a, // page number
      tax: t((e = "." + e)).attr("data-tax"), //
      "post-type": t(e).attr("data-post-type"),
      term: t(e).attr("data-terms"),
      "per-page": t(e).attr("data-per-page"),
      "data-target-div": e,
    };
  }
  t(".caf-post-layout-container").each(function (e) {
    // page number, main div
    0 == e && get_posts(a(1, t(this).attr("data-target-div")));
  }),
    t("ul.dropdown li a").click(function () {
      var a = t(this).text();
      t("ul.dropdown span.result").html(a);
    }),
    t(".caf-post-layout-container").on(
      "click",
      ".caf-filter-container li a, .caf-pagination a",
      function (e) {
        n = e.delegateTarget.getAttribute("data-target-div");
        $page = parseInt(t(this).attr("href").replace(/\D/g, ""));
        get_posts(a($page, n)), e.preventDefault();
      }
    ),
    t(".caf-post-layout-container").on(
      "change",
      ".caf-filter-container li input",
      function (e) {
        var n = e.currentTarget.getAttribute("data-target-div");

        if (t(this).is(":checked")) {
          var s = t(this).val();
          t("." + n).attr("data-terms", s), ($page = 1);
          t(".caf-filter-container li input").not(this).prop("checked", false);
        } else {
          t("." + n).attr("data-terms", "all"), ($page = 1);
        }
        get_posts(a($page, n)), e.preventDefault();
      }
    );
    
   t(".head").click(function () {
    t(this).toggleClass("active");
    t(this).parent().find(".arrow").toggleClass("arrow-animate");
    t(this).parent().find(".content").slideToggle(280);
  });
  
});



/**
 * Multiple filter functionality
 * 
 * if ("flt" == e.currentTarget.getAttribute("data-main-id")) {
  // Get the clicked element
  var clickedElement = t(this);

  // Get the data-id attribute from the clicked element
  var s = clickedElement.attr("data-id");

  // Get the existing value of the data-terms attribute on the main div
  var currentDataTerms = t("." + n).attr("data-terms");

  // Check if it has the "active" class
  if (clickedElement.hasClass("active")) {
    console.log("active");
    // If it has the class, remove it
    clickedElement.removeClass("active");
    
    // Remove the clicked value from the existing data-terms
    var updatedDataTerms = currentDataTerms.replace(new RegExp(s + ','), '').replace(new RegExp(',' + s), '').replace(new RegExp(s), '');

    // Set the updated data-terms attribute on the main div
    t("." + n).attr("data-terms", updatedDataTerms);
  } else {
    console.log("deactive");
    // If it doesn't have the class, add it
    clickedElement.addClass("active");

    // Add the clicked value to the existing data-terms with a comma
    var updatedDataTerms = currentDataTerms ? currentDataTerms + ',' + s : s;

    // Set the updated data-terms attribute on the main div
    t("." + n).attr("data-terms", updatedDataTerms);
  }

  // Set the $page variable to 1
  $page = 1;
}

 */